
import '../dio/db/category_db.dart';
import '../dio/services/category_service.dart';
import '../models/category.dart';

class CategoryRepository {
  final CategoryService _categoryService = CategoryService();
  final CategoryDatabase _categoryDatabase = CategoryDatabase.instance;

  /// üîπ **–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö**
  Future<List<Category>> getCategoriesFromLocal() async {
    return await _categoryDatabase.getCategories();
  }

  /// üîπ **–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã**
  Future<List<Category>> getCategoriesFromServerAndSave() async {
    try {
      List<Category> categories = await _categoryService.getCategories();
      await _categoryDatabase.insertCategories(categories);
      print("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö");
      return categories;
    } catch (e) {
      print("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞: $e");
      return [];
    }
  }

  /// üîπ **–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏**
  Future<bool> addCategory(String title) async {
    try {
      // 1Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      Category? newCategory = await _categoryService.addCategory(title);
      if (newCategory != null) {
        // 2Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await _categoryDatabase.insertCategories([newCategory]);
        print("–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ");
        return true;
      }
    } catch (e) {
      print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: $e");
    }
    return false;
  }
}
